name: Build Windows EXE (Enhanced Compatibility)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build-windows-exe:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        architecture: 'x64'
    
    - name: Install dependencies with error handling
      run: |
        python -m pip install --upgrade pip
        # 安装依赖时添加错误处理
        try {
          pip install pyinstaller
          pip install -r requirements.txt
          Write-Host "✅ 依赖安装成功"
        } catch {
          Write-Host "❌ 依赖安装失败: $($_.Exception.Message)"
          Write-Host "🔄 尝试使用备用方法安装..."
          pip install --upgrade pip setuptools wheel
          pip install --only-binary=all -r requirements.txt
        }
    
    - name: Build EXE with PyInstaller
      run: |
        Write-Host "🔨 开始构建Windows可执行文件..."
        pyinstaller --clean --noconfirm "DHI_Screening_System_v3.0.spec"
        
        # 验证构建结果
        $exePath = "dist\DHI_Screening_System_v3.0\DHI_Screening_System_v3.0.exe"
        if (Test-Path $exePath) {
          $fileSize = (Get-Item $exePath).Length / 1MB
          Write-Host "✅ EXE构建成功: $([math]::Round($fileSize, 2)) MB"
        } else {
          Write-Host "❌ EXE构建失败"
          exit 1
        }
    
    - name: Install Inno Setup
      run: |
        Write-Host "📥 下载并安装Inno Setup..."
        $url = "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe"
        $output = "innosetup-installer.exe"
        try {
          Invoke-WebRequest -Uri $url -OutFile $output
          Start-Process -FilePath $output -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART" -Wait
          $env:PATH += ";C:\Program Files (x86)\Inno Setup 6"
          echo "C:\Program Files (x86)\Inno Setup 6" >> $env:GITHUB_PATH
          Write-Host "✅ Inno Setup安装成功"
        } catch {
          Write-Host "❌ Inno Setup安装失败: $($_.Exception.Message)"
          exit 1
        }
        
    - name: Create Enhanced Installer Script
      run: |
        Write-Host "📝 创建增强兼容性安装脚本..."
        
        # 创建安装脚本内容
        "; DHI筛查分析系统 v3.0 - 增强兼容性安装程序" | Out-File "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "; 伊利液奶奶科院" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "; 支持Windows 7/8/10/11 (64位)" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "#define MyAppNameChinese `"DHI筛查分析系统`"" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "#define MyAppVersion `"3.0`"" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "#define MyAppPublisher `"伊利液奶奶科院`"" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "#define MyAppExeName `"DHI_Screening_System_v3.0.exe`"" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "[Setup]" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "AppId={{B6F5E7D4-8A2C-4F1B-9E3D-7A6C8B9D0E1F}" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "AppName={#MyAppNameChinese}" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "AppVersion={#MyAppVersion}" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "AppVerName={#MyAppNameChinese} v{#MyAppVersion}" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "AppPublisher={#MyAppPublisher}" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "AppCopyright=Copyright (C) 2025 {#MyAppPublisher}" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "; 增强兼容性设置" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "DefaultDirName={autopf}\{#MyAppNameChinese}" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "DefaultGroupName={#MyAppNameChinese}" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "AllowNoIcons=yes" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "OutputDir=installer" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "OutputBaseFilename=DHI_Screening_System_v{#MyAppVersion}_Enhanced_Setup" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "SetupIconFile=whg3r-qi1nv-001.ico" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "Compression=lzma" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "SolidCompression=yes" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "WizardStyle=modern" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "; 支持Windows 7及以上 (64位)" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "MinVersion=6.1" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "ArchitecturesAllowed=x64" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "ArchitecturesInstallIn64BitMode=x64" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "; 权限设置" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "PrivilegesRequired=admin" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "PrivilegesRequiredOverridesAllowed=commandline" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "; 卸载设置" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "UninstallDisplayIcon={app}\{#MyAppExeName}" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "UninstallDisplayName={#MyAppNameChinese} v{#MyAppVersion}" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "[Languages]" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "Name: `"english`"; MessagesFile: `"compiler:Default.isl`"" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "[Tasks]" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "Name: `"desktopicon`"; Description: `"{cm:CreateDesktopIcon}`"; GroupDescription: `"{cm:AdditionalIcons}`"; Flags: unchecked" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "[Files]" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "; 主程序文件" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "Source: `"dist\DHI_Screening_System_v3.0\*`"; DestDir: `"{app}`"; Flags: ignoreversion recursesubdirs createallsubdirs" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "; 文档文件" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "Source: `"README.md`"; DestDir: `"{app}`"; Flags: ignoreversion" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "Source: `"LICENSE.txt`"; DestDir: `"{app}`"; Flags: ignoreversion skipifsourcedoesntexist" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "Source: `"whg3r-qi1nv-001.ico`"; DestDir: `"{app}`"; Flags: ignoreversion" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "[Icons]" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "; 开始菜单" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "Name: `"{group}\{#MyAppNameChinese}`"; Filename: `"{app}\{#MyAppExeName}`"; IconFilename: `"{app}\whg3r-qi1nv-001.ico`"" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "Name: `"{group}\操作说明`"; Filename: `"{app}\README.md`"" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "Name: `"{group}\卸载 {#MyAppNameChinese}`"; Filename: `"{uninstallexe}`"" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "; 桌面快捷方式" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "Name: `"{autodesktop}\{#MyAppNameChinese}`"; Filename: `"{app}\{#MyAppExeName}`"; IconFilename: `"{app}\whg3r-qi1nv-001.ico`"; Tasks: desktopicon" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "[Run]" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "; 安装完成后运行选项" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        "Filename: `"{app}\{#MyAppExeName}`"; Description: `"{cm:LaunchProgram,{#StringChange(MyAppNameChinese, '&', '&&')}}`"; Flags: nowait postinstall skipifsilent" | Add-Content "DHI_Enhanced_Setup.iss" -Encoding UTF8
        
        Write-Host "✅ 安装脚本创建完成"
        
    - name: Create Enhanced Installer
      run: |
        if (-not (Test-Path "installer")) {
          New-Item -ItemType Directory -Path "installer"
        }
        
        $isccPath = "C:\Program Files (x86)\Inno Setup 6\ISCC.exe"
        Write-Host "🔨 创建增强兼容性安装包..."
        
        try {
          & $isccPath "DHI_Enhanced_Setup.iss"
          if ($LASTEXITCODE -eq 0) {
            Write-Host "✅ 安装包创建成功"
            $installerPath = "installer\DHI_Screening_System_v3.0_Enhanced_Setup.exe"
            if (Test-Path $installerPath) {
              $fileSize = (Get-Item $installerPath).Length / 1MB
              Write-Host "📦 安装包大小: $([math]::Round($fileSize, 2)) MB"
            }
          } else {
            throw "Inno Setup编译失败，退出代码: $LASTEXITCODE"
          }
        } catch {
          Write-Host "❌ 安装包创建失败: $($_.Exception.Message)"
          exit 1
        }
        
    - name: Create Portable Version
      run: |
        Write-Host "📦 创建便携版本..."
        
        if (-not (Test-Path "release")) {
          New-Item -ItemType Directory -Path "release"
        }
        
        # 复制程序文件
        xcopy "dist\DHI_Screening_System_v3.0" "release\DHI_Screening_System_v3.0_Portable" /E /I /Y
        
        # 复制文档
        xcopy "README.md" "release\" /Y
        xcopy "LICENSE.txt" "release\" /Y
        
        # 创建便携版说明
        "# DHI筛查分析系统 v3.0 - 便携版" | Out-File "release\便携版说明.txt" -Encoding UTF8
        "" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "## 使用说明" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "1. 解压到任意目录" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "2. 运行 DHI_Screening_System_v3.0.exe" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "3. 无需安装，无需管理员权限" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "## 系统要求" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "- Windows 7/8/10/11 (64位)" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "- 4GB RAM (推荐8GB)" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "- 500MB 可用磁盘空间" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "## 注意事项" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "- 便携版数据保存在程序目录下" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "- 建议解压到非系统盘使用" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "- 如需卸载，直接删除整个文件夹即可" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "版本: v3.0" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        "构建时间: $(Get-Date)" | Add-Content "release\便携版说明.txt" -Encoding UTF8
        
        # 压缩便携版
        powershell Compress-Archive -Path "release\*" -DestinationPath "DHI_Screening_System_v3.0_Portable.zip" -Force
        
        Write-Host "✅ 便携版创建完成"
        
    - name: Upload Enhanced Installer
      uses: actions/upload-artifact@v4
      with:
        name: DHI_Enhanced_Installer
        path: installer/
        
    - name: Upload Portable Version
      uses: actions/upload-artifact@v4
      with:
        name: DHI_Portable_Version
        path: DHI_Screening_System_v3.0_Portable.zip
        
    - name: Create comprehensive release info
      run: |
        $buildTime = Get-Date
        
        # 创建构建说明文档
        "# DHI筛查分析系统 v3.0 - 增强兼容性构建" | Out-File -FilePath "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "## 🏢 开发单位" | Add-Content "构建说明.txt" -Encoding UTF8
        "**伊利液奶奶科院**" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "## 📦 构建产物" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "### 1. 🎯 增强安装包（推荐）" | Add-Content "构建说明.txt" -Encoding UTF8
        "**文件**: DHI_Screening_System_v3.0_Enhanced_Setup.exe" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "**特性**:" | Add-Content "构建说明.txt" -Encoding UTF8
        "- ✅ 智能版本检测和升级" | Add-Content "构建说明.txt" -Encoding UTF8
        "- ✅ 自动卸载旧版本" | Add-Content "构建说明.txt" -Encoding UTF8
        "- ✅ 完整的Windows集成" | Add-Content "构建说明.txt" -Encoding UTF8
        "- ✅ 开始菜单程序组" | Add-Content "构建说明.txt" -Encoding UTF8
        "- ✅ 桌面快捷方式（可选）" | Add-Content "构建说明.txt" -Encoding UTF8
        "- ✅ 完整卸载功能" | Add-Content "构建说明.txt" -Encoding UTF8
        "- ✅ 64位系统优化" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "### 2. 💚 便携版本" | Add-Content "构建说明.txt" -Encoding UTF8
        "**文件**: DHI_Screening_System_v3.0_Portable.zip" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "**特性**:" | Add-Content "构建说明.txt" -Encoding UTF8
        "- 💚 免安装绿色版本" | Add-Content "构建说明.txt" -Encoding UTF8
        "- 📂 解压即用" | Add-Content "构建说明.txt" -Encoding UTF8
        "- 🔓 无需管理员权限" | Add-Content "构建说明.txt" -Encoding UTF8
        "- 📁 数据保存在程序目录" | Add-Content "构建说明.txt" -Encoding UTF8
        "- 🗑️ 删除即卸载" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "## 🖥️ 系统兼容性" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "**支持的操作系统**:" | Add-Content "构建说明.txt" -Encoding UTF8
        "- ✅ Windows 7 SP1 (64位)" | Add-Content "构建说明.txt" -Encoding UTF8
        "- ✅ Windows 8/8.1 (64位)" | Add-Content "构建说明.txt" -Encoding UTF8
        "- ✅ Windows 10 (64位)" | Add-Content "构建说明.txt" -Encoding UTF8
        "- ✅ Windows 11 (64位)" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "**硬件要求**:" | Add-Content "构建说明.txt" -Encoding UTF8
        "- **处理器**: 64位处理器" | Add-Content "构建说明.txt" -Encoding UTF8
        "- **内存**: 最低2GB，推荐4GB+" | Add-Content "构建说明.txt" -Encoding UTF8
        "- **磁盘**: 500MB可用空间" | Add-Content "构建说明.txt" -Encoding UTF8
        "- **显示器**: 1024x768分辨率" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "**软件依赖**:" | Add-Content "构建说明.txt" -Encoding UTF8
        "- 无需额外安装Python或其他运行时" | Add-Content "构建说明.txt" -Encoding UTF8
        "- 内置所有必要组件" | Add-Content "构建说明.txt" -Encoding UTF8
        "- 优化的启动性能（2-5秒）" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "## 🚀 安装使用指南" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "### 增强安装包安装步骤:" | Add-Content "构建说明.txt" -Encoding UTF8
        "1. 下载 DHI_Screening_System_v3.0_Enhanced_Setup.exe" | Add-Content "构建说明.txt" -Encoding UTF8
        "2. 右键选择'以管理员身份运行'" | Add-Content "构建说明.txt" -Encoding UTF8
        "3. 如检测到旧版本，选择'是'自动卸载" | Add-Content "构建说明.txt" -Encoding UTF8
        "4. 跟随安装向导完成安装" | Add-Content "构建说明.txt" -Encoding UTF8
        "5. 从开始菜单启动程序" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "### 便携版使用步骤:" | Add-Content "构建说明.txt" -Encoding UTF8
        "1. 下载 DHI_Screening_System_v3.0_Portable.zip" | Add-Content "构建说明.txt" -Encoding UTF8
        "2. 解压到任意目录（建议非系统盘）" | Add-Content "构建说明.txt" -Encoding UTF8
        "3. 运行 DHI_Screening_System_v3.0.exe" | Add-Content "构建说明.txt" -Encoding UTF8
        "4. 首次运行会自动初始化配置" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "---" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "**构建信息**:" | Add-Content "构建说明.txt" -Encoding UTF8
        "- 🕒 构建时间: $buildTime" | Add-Content "构建说明.txt" -Encoding UTF8
        "- 🏗️ 构建环境: GitHub Actions (Windows)" | Add-Content "构建说明.txt" -Encoding UTF8
        "- 📦 打包工具: PyInstaller + Inno Setup" | Add-Content "构建说明.txt" -Encoding UTF8
        "- 🔧 版本标识: v3.0-Enhanced" | Add-Content "构建说明.txt" -Encoding UTF8
        "" | Add-Content "构建说明.txt" -Encoding UTF8
        "**版权信息**:" | Add-Content "构建说明.txt" -Encoding UTF8
        "Copyright (C) 2025 伊利液奶奶科院 版权所有" | Add-Content "构建说明.txt" -Encoding UTF8
        
        Write-Host "✅ 构建说明文档创建完成"
        
    - name: Upload Build Documentation
      uses: actions/upload-artifact@v4
      with:
        name: Build_Documentation
        path: 构建说明.txt 