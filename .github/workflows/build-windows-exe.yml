name: Build Windows EXE (OneDIR Mode)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows-exe:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        architecture: 'x64'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        Write-Host "✅ 依赖安装成功"
    
    - name: Build EXE with PyInstaller OneDIR Mode
      run: |
        Write-Host "�� 开始构建Windows可执行文件 (OneDIR模式)..."
        Write-Host "📋 使用配置文件: DHI_Screening_System_v3.3.spec"
        Write-Host "🚀 OneDIR模式优势: 启动速度快，文件结构清晰"
        
        pyinstaller --clean --noconfirm "DHI_Screening_System_v3.3.spec"
        
        $distDir = "dist\DHI_Screening_System_v3.3"
        $exePath = "$distDir\DHI_Screening_System_v3.3.exe"
        
        if (Test-Path $exePath) {
          $fileSize = (Get-Item $exePath).Length / 1MB
          Write-Host "✅ EXE构建成功: $([math]::Round($fileSize, 2)) MB"
          
          Write-Host "📂 OneDIR构建结果:"
          Get-ChildItem $distDir | Format-Table Name, Length, LastWriteTime
          
          $totalSize = (Get-ChildItem $distDir -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB
          Write-Host "📊 完整应用大小: $([math]::Round($totalSize, 2)) MB"
          
          $fileCount = (Get-ChildItem $distDir -Recurse -File).Count
          Write-Host "📄 文件总数: $fileCount"
          
        } else {
          Write-Host "❌ EXE构建失败"
          exit 1
        }
    
    - name: Create distribution package
      run: |
        Write-Host "📦 创建分发包..."
        
        $packageDir = "DHI_Release_Package"
        if (Test-Path $packageDir) {
          Remove-Item -Recurse -Force $packageDir
        }
        New-Item -ItemType Directory -Path $packageDir
        
        $sourceDir = "dist\DHI_Screening_System_v3.3"
        $targetDir = "$packageDir\DHI_Screening_System_v3.3"
        
        Copy-Item -Path $sourceDir -Destination $targetDir -Recurse
        Write-Host "✅ OneDIR应用已复制到分发包"
        
        $docFiles = @("README.md", "LICENSE.txt", "CHANGELOG.md", "whg3r-qi1nv-001.ico")
        foreach ($file in $docFiles) {
          if (Test-Path $file) {
            Copy-Item -Path $file -Destination $packageDir
            Write-Host "✅ 已复制: $file"
          }
        }
        
        $buildTime = Get-Date -Format 'yyyy-MM-dd HH:mm:ss'
        $usageInfo = "DHI精准筛查助手 v3.3 - OneDIR版本`n`n=== 构建信息 ===`n构建时间: $buildTime`n构建方式: PyInstaller OneDIR Mode`n系统架构: Windows x64`nPython版本: 3.11`n`n=== 使用说明 ===`n1. 解压整个文件夹到目标位置`n2. 进入 DHI_Screening_System_v3.3 目录`n3. 双击运行 DHI_Screening_System_v3.3.exe`n`n=== OneDIR模式优势 ===`n✅ 启动速度快 (2-3秒)`n✅ 文件结构清晰`n✅ 依赖库独立存放`n✅ 便于调试和维护`n✅ 支持增量更新`n`n=== 系统要求 ===`n- Windows 7/8/10/11 (64位)`n- 内存: 4GB RAM 推荐`n- 硬盘: 200MB 可用空间`n`n技术支持: 伊利液奶奶科院"
        
        $usageInfo | Out-File -FilePath "$packageDir\使用说明.txt" -Encoding UTF8
        
        $shortcutScript = '@echo off' + "`n" + 'echo 正在创建桌面快捷方式...' + "`n" + 'set "target=%~dp0DHI_Screening_System_v3.3\DHI_Screening_System_v3.3.exe"' + "`n" + 'set "shortcut=%USERPROFILE%\Desktop\DHI精准筛查助手.lnk"' + "`n" + 'powershell -Command "& {$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut(''%shortcut%''); $Shortcut.TargetPath = ''%target%''; $Shortcut.WorkingDirectory = ''%~dp0DHI_Screening_System_v3.3''; $Shortcut.IconLocation = ''%~dp0whg3r-qi1nv-001.ico''; $Shortcut.Save()}"' + "`n" + 'if exist "%shortcut%" (' + "`n" + '    echo ✅ 桌面快捷方式创建成功！' + "`n" + ') else (' + "`n" + '    echo ❌ 快捷方式创建失败' + "`n" + ')' + "`n" + 'pause'
        
        $shortcutScript | Out-File -FilePath "$packageDir\创建桌面快捷方式.bat" -Encoding UTF8
        
        Write-Host "📋 分发包内容:"
        Get-ChildItem $packageDir | Format-Table Name, Length, LastWriteTime
        
        $packageSize = (Get-ChildItem $packageDir -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB
        Write-Host "📊 分发包总大小: $([math]::Round($packageSize, 2)) MB"
    
    - name: Create ZIP archive
      run: |
        Write-Host "🗜️ 创建ZIP压缩包..."
        
        $zipName = "DHI_Screening_System_v3.3_OneDIR_$(Get-Date -Format 'yyyyMMdd_HHmmss').zip"
        
        Compress-Archive -Path "DHI_Release_Package\*" -DestinationPath $zipName -CompressionLevel Optimal
        
        if (Test-Path $zipName) {
          $zipSize = (Get-Item $zipName).Length / 1MB
          Write-Host "✅ ZIP压缩包创建成功: $([math]::Round($zipSize, 2)) MB"
          Write-Host "📦 文件名: $zipName"
        } else {
          Write-Host "❌ ZIP压缩包创建失败"
          exit 1
        }
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: DHI-OneDIR-v3.3-${{ github.run_number }}
        path: |
          DHI_Screening_System_v3.3_OneDIR_*.zip
          DHI_Release_Package/
        retention-days: 30
    
    - name: Build summary
      run: |
        Write-Host "🎉 OneDIR构建完成摘要"
        Write-Host "========================"
        Write-Host "�� 版本: v3.3"
        Write-Host "🔧 模式: PyInstaller OneDIR"
        Write-Host "🚀 启动速度: 快速 (2-3秒)"
        Write-Host "📂 输出: DHI_Screening_System_v3.3/ 目录"
        Write-Host "💾 下载: GitHub Actions Artifacts"
        Write-Host "📋 包含: 完整应用 + 使用说明 + 快捷方式脚本"
        Write-Host "🖥️ 兼容: Windows 7/8/10/11 (64位)"
        Write-Host ""
        Write-Host "✅ 用户可以下载ZIP包，解压后直接使用"
        Write-Host "✅ 支持用Inno Setup制作专业安装包"
